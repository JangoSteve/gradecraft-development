= simple_form_for(@assignment_type, :html => {:class => 'form-horizontal'} ) do |f|
  .well
    %h4 The Basics
    = f.input :name, :label => "Name"
    = f.input :point_setting, :label => "How will points be set?", :hint => "Do all assignments of this type have the same point value? For instance, if your type groups all class attendance assignments, they could each be worth 100 points and you can set that universally here.", :collection => [["Individually"], ["Universally"]]
    = f.input :universal_point_value, :label => "Universal Value", :hint => "If assignments in this category all have the same point value, what is that?"
    = f.input :due_date_present, :label => "Due Dates", :as => :radio_buttons, :hint => "Will assignments in this category have due dates?"
    = f.input :resubmission, :label => "Resubmission", :collection => [["Yes", "1"], ["No", "0"], ["Set per Assignment", "2"]], :as => :radio_buttons, :hint => "Will students be allowed to resubmit work after it's been graded?"
    = f.input :max_value, :label => "Max Value", :hint => "Does this assignment type have a maximum value within the course?"
    = f.input :percentage_course, :label => "Course Percentage", :hint => "What percentage of the course total grade does this assignment type make up?"
    = f.input :student_weightable, :label => "Student Controlled", :hint => "Do students decide how much this assignment type is worth?", :as => :radio_buttons
  .well
    %h4 Predictor Settings
    = f.input :order_placement, :label => "Assignment Type Order", :hint => "What order would you like the assignment types to appear in?"
    = f.input :points_predictor_display, :collection => [["Fixed"], ["Slider"], ["Select List"], ["Set per Assignment"]]
    = f.input :predictor_description, :as => :text, :input_html => {:style => "width: 100%; height: 200px;"}, :label => "Predictor Display Text", :hint => "How would you like to describe this assignment type in the predictor? Are there hints that you can give students that will help them understand how to succeed?"
  .well
    %h4 Grading
    = f.input :mass_grade, :label => "Mass Grading", :hint => "Do you want to be able to grade all students who submit this assignment in a single screen?"
    = f.input :mass_grade_type, :label => "Mass Grading Format", :hint => "Would you like the levels to be represented via checkbox, radio buttons or select forms?", :collection => [["Radio Buttons"], ["Select List"], ["Checkbox"], ["Set per Assignment"]]
    = f.input :levels, :label => "Leveled Grading", :hint => "This includes normal A - F grading schemes.", :as => :radio_buttons
  .well
    %h5 Score Levels
    .score-levels
      %script(id="score-level-template" type="text/x-template")
        %fieldset.score-level
          = f.simple_fields_for :score_levels, ScoreLevel.new, class: 'form-inline', child_index: 'child_index' do |slf|
            = render 'score_level_fields', f: slf
      - @assignment_type.score_levels.each do |score_level|
        %fieldset.score-level
          = f.simple_fields_for :score_levels, score_level, class: 'form-inline' do |slf|
            = render 'score_level_fields', f: slf
    %hr
    = link_to 'Add a Level', '#', class: 'add-level'

  .form-actions
    %div.btn-toolbar
      %div.btn-group
        = f.button :submit, :class => "btn-primary"
      %div.btn-group
        = link_to 'Cancel', assignment_types_path, :class => 'btn btn-info'
