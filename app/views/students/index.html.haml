= content_nav_for User, term_for(:students) do
  %li= link_to "Create a New #{term_for :student}", new_user_path, :class => "button tiny radius"
  %li= link_to "Download CSV", students_path(format: 'csv'), :class => "button tiny radius"
  %li= link_to "Download Gradebook", gradebook_path(format: 'csv'), :class => "button tiny radius"

%h6= @title

- if current_course.has_teams?
  = form_tag students_path, :method => :get do
    = select_tag :team_id, options_for_select(current_course.teams.alpha.map { |t| [t.name, t.id] }, @team.try(:id)), :prompt => "Select a #{current_course.team_term}", :class => "large-2 offset-2"
    = submit_tag 'Filter', :class => 'button tiny radius'

%table.table.simpleTable.table-striped
  %thead
    %tr
      %th
      %th.sortable{"data-sort" => "string"} Name
      %th.sortable{"data-sort" => "string"} Email
      - if current_course.in_team_leaderboard?
        %th.sortable{"data-sort" => "string"} Screenname
      - if current_course.has_teams?
        %th.sortable{"data-sort" => "string"} #{current_course.team_term}
      - if current_course.team_roles?
        %th.sortable{"data-sort" => "string"} Role
      - if current_user.is_staff?
        %th.sortable{"data-sort" => "int"} Score
        %th.sortable{"data-sort" => "string"} Current Grade
      - if current_course.has_badges?
        %th.sortable{"data-sort" => "string"} Badges Earned
  %tbody
    - if @team
      - students = current_course_data.students_for_team(@team)
    - else
      - students = current_course_data.students.being_graded
    - i = 1
    - students.each_with_index do |student|
      %tr
        %td= i
        %td{:data => { :"sort-value" => "#{student.last_name}"} }= link_to student.name, student_path(student)
        %td= mail_to student.email, student.email
        - if current_course.in_team_leaderboard?
          %td= student.display_name
        - if current_course.has_teams?
          %td
            - if student.team_for_course(current_course)
              = link_to student.team_for_course(current_course).name, student.team_for_course(current_course)
        - if current_course.team_roles?
          %td= student.try(:team_role)
        - if student.respond_to?(:grades)
          %td{:data => { :"sort-value" => "#{current_course.score_for_student(student)}"} }= points current_course.score_for_student(student)
          %td
            = student.grade_letter_for_course(current_course)
            = student.grade_level_for_course(current_course)
        - if current_course.has_badges?
          %td
            - student.earned_badges_for_course(current_course).sum
      - i += 1

- if @auditing.present?

  %h6 Auditing

  %table.table.simpleTable.table-striped
    %thead
      %tr
        %th.sortable{"data-sort" => "string"} Name
        %th.sortable{"data-sort" => "string"} Email
        - if current_course.team_roles?
          %th.sortable{"data-sort" => "string"} Role
        - if current_user.is_staff?
          %th.sortable{"data-sort" => "int"} Score
          %th.sortable{"data-sort" => "string"} Current Grade
        - if current_course.has_badges?
          %th.sortable{"data-sort" => "string"} Badges Earned
    %tbody
      - current_course_data.students.auditing.each do |student|
        %tr
          %td{:data => { :"sort-value" => "#{student.last_name}"} }= link_to student.name, student_path(student)
          %td= mail_to student.email, student.email
          - if current_course.team_roles?
            %td= student.try(:team_role)
          - if student.respond_to?(:grades)
            %td= points student.score_for_course(current_course)
            %td= student.grade_level_for_course(current_course)
          - if current_course.has_badges?
            %td
              - student.earned_badges.each do |badge|
                %img{:src => badge.try(:icon), :alt => badge.try(:name), :width => "20"}
