- @assignments.group_by(&:assignment_type).each do |assignment_type, assignments|
  .col.col-lg-12
    %button.btn.btn-success.col.col-sm-12.col-lg-12{"data-target" => "#assignment_type-#{assignment_type.id}", "data-toggle" => "collapse"} #{assignment_type.try(:name)} +#{ number_with_delimiter(@user.score_for_assignment_type(assignment_type))}
    .collapse{:id => "assignment_type-#{assignment_type.id}"}
      %span.badge.badge-success.pull-right.col.col-lg-4.col-sm-12.clear
        = number_with_delimiter(@user.score_for_assignment_type(assignment_type))
        = "/"
        = " #{number_with_delimiter(@user.point_total_for_assignment_type(assignment_type))} possible points"
      - if assignment_type.student_weightable?
        = render "users/assignment_weights", assignment_type: assignment_type
      - assignments.each do |assignment|
        .col.col-lg-12.clear.col-sm-12.col-xs-12
          %span.assignmentName= assignment.name
          %span.points= "("
          - if assignment.grade_for_student(@user).present? && assignment.grade_for_student(@user) > 0
            %span.points.earned= "#{number_with_delimiter(assignment.grade_for_student(@user))} "
            %span.points= "/"
          - elsif assignment.grade_for_student(@user).present?
            %span.points.missed= "#{number_with_delimiter(assignment.grade_for_student(@user))}  / "
          %span.points.total= "#{number_with_delimiter(assignment.point_total)} points )"
          - if assignment.future?
            %span.italic= " â€¢ Due: #{assignment.try(:due_at).strftime("%A, %B %d")}"
          - if assignment.accepts_submissions?
            = render "users/submissions", assignment: assignment
          - if assignment.is_required?
            %span.label.label-important Required!
          %p= assignment.description
          = render "users/grade", assignment: assignment
