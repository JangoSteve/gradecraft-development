%h1.userName= @user.try(:name)

%div.span2.userDashboard
  %div.span12
    = gravatar_for @user, :size => 150
  - if current_user.is_student?
    %div.span12#gradeCurious.btn.btn-primary{:title => "Current Final Grade:", "data-content" => current_course.grade_level(@user)}
      %span.buttonTitle How am I doing?
  - elsif current_user.is_staff? 
    %div.span12#gradeCurious.btn.btn-primary{:title => "Current Final Grade:", "data-content" => current_course.grade_level(@user)} 
      %span.buttonTitle How are they doing?
  - if current_course.has_badges? 
    %div.btn.btn-success.span12{"data-target" => "#badges", "data-toggle" => "collapse"}
      %span.buttonTitle Badges
      %div{:id => "badges", :class => "collapse"}
        %div.badgeContainer
        - @badges.each do |badge|
          - @user.earned_badges_by_badge(badge).tap do |earned_badge|
            - if earned_badge
              %div.badgeIcon
                %img{:src => badge.try(:icon), :alt => "You've earned the #{badge.try(:name)} badge", :class => "earned", :width => "40", :height => "40"}
                .badgeTitle= badge.name
            - else
              %div.badgeIcon
                %img{:src => badge.try(:icon), :alt => badge.try(:name), :class => "unearned"}
                .badgeTitle= badge.name
        %div.span12.clear_fix
          Badges you've earned will shine brightly!
  %div.btn.btn-danger.span12{"data-target" => "#toDoList", "data-toggle" => "collapse"} 
    %span.buttonTitle To Do List
    %div{:id => "toDoList", :class => "collapse"}
      - @assignments.group_by(&:assignment_type).each do |assignment_type, assignments|
        //FIX THIS
        //- if assignment_type.has_soon_assignments?
        %span.assignmentTypeToDo
          = "#{assignment_type.try(:name)}:"
        %ul
          - assignments.each do |assignment|
            - if assignment.soon? && assignment.future? 
              %li
                = "#{assignment.try(:name)}" 
                %div= "(Due: #{assignment.try(:due_date).strftime("%b-%d")})"
                - if assignment.has_assignment_submissions?
                  - assignment.submission_for_student(@user).tap do |submission|
                    - if submission
                      = link_to "See Submission", assignment_assignment_submission_path(assignment, submission), :class => 'btn btn-info btn-mini'
                    - else
                      - if assignment.is_individual?
                        %div= link_to "Submit", new_assignment_assignment_submission_path(assignment, @assignment_submission, :submittable_id => @user, :submittable_type => "User"), :class => 'btn btn-mini btn-info'
                      - elsif assignment.has_teams?
                        %div= link_to "Submit", new_assignment_assignment_submission_path(assignment, @assignment_submission, :submittable_id => @user.teams.first, :submittable_type => "Team"), :class => 'btn btn-mini btn-info'
                - if assignment.self_gradeable? && assignment.open?
                  = link_to "#{assignment.student_logged_button_text}", self_log_assignment_grades_path(assignment, :gradeable_id => @user.id, :gradeable_type => "User"), :class => "btn btn-info btn-mini"

%div.span9.userDashboard
  %div#userScoreSection.span12
    %div.pull-right
      %div.btn-group
        - if current_user.is_staff?
          - if current_course.has_badges? && current_course.course_badges? or current_course.has_badges? && current_course.multi_badges?
            = link_to "Award a Badge", new_user_earned_badge_path(@user), :class => "btn btn-small"
          = link_to "Email", "mailto:#{@user.email}", :class => "btn btn-small"
        - @user.team_leader.tap do |team_leader|
          - if team_leader.present?
            = link_to "Email #{current_course.section_leader_term} (#{team_leader.first_name})", "mailto:#{team_leader.email}", :class => "btn btn-small"
      %div#userID{ :'data-user-id' => @user.id }
    %div#userPointValues
      - if current_user.is_student?
        %span= "Your current score is "
      - elsif current_user.is_staff?
        %span= "Current Score: "
      %span#userScoreNum #{number_with_delimiter(@user.earned_grades(current_course), :delimiter => ',') if @user.respond_to?(:earned_grades)}
    %a{:href => "#", :id => "totalScoreToggle", :class => "dashboard-toggle"}
      Show me my score out of total course points
    %a{:href => "#", :id => "soFarScoreToggle", :class => "dashboard-toggle"}
      Show me my score out of available points so far

    %div#predictorLink.hidden-phone
      - if current_user.is_student? && current_course.predictor_on?
        %div= link_to 'Predict My Grade', predictor_users_path(:user_id => @user.id), :class => "btn btn-inverse"
      - if current_user.is_staff?
        %div= link_to 'Predict Course Grade', predictor_users_path(:user_id => @user.id), :class => "btn btn-inverse"
    
    %div#userBarInProgress{:class => "dashboard-toggle"}
    %div#userBarTotal{:class => "dashboard-toggle"}
    %div#Grades
      - @assignments.group_by(&:assignment_type).each do |assignment_type, assignments|
        %div.assignmentType
          %button.btn.btn-inverse{"data-target" => "#assignment_type-#{assignment_type.id}", "data-toggle" => "collapse"} #{assignment_type.try(:name)}
          %span
          - if assignment_type.student_choice? && assignment_type.multiplier_open?
            - assignment_type.weight_for_student(@user).tap do |weight|
              - if weight
                %span.badge.badge-warning= "#{@user.assignment_type_multiplied_score(assignment_type)} / #{current_course.point_totals_by_assignment_type_for_student(@user)[assignment_type.id]} possible points "
                %a.badge.badge-important
                  = "#{weight} #{current_course.multiplier_term} (Change)"
              - else
                %span.badge.badge-warning= "#{@user.assignment_type_score(assignment_type)} / #{assignment_type.assignment_value_sum} possible points"
                %a.badge.badge-important
                  = "Set #{current_course.multiplier_term}"
          - elsif assignment_type.student_choice?
            - assignment_type.weights_for_student(@user).tap do |weight|
              - if weight
                %span.badge.badge-warning= "#{@user.assignment_type_multiplied_score(assignment_type)} / #{@user.assignment_type_multiplied_value(assignment_type)} possible points "
                %span.badge.badge-important= "#{weight} #{current_course.multiplier_term}"
          - else
            %span.badge.badge-warning= "#{@user.assignment_type_score(assignment_type)} / #{assignment_type.assignment_value_sum} possible points"
                        
          %div{:id => "assignment_type-#{assignment_type.id}", :class => "collapse"}
            %div.assignmentsGroup
              - assignments.each do |assignment|
                %div.assignment
                  %span.assignmentTitle= assignment.try(:name)
                  - if assignment.is_required?
                    %span.assignmentRequired.label.label-important Required!
                  - if assignment.future?
                    %span.assignmentDate= "| Due: #{assignment.try(:due_date).strftime("%A, %B %d")}"
                    %span.assignmentDesc= raw assignment.description
                  %div.grade    
                    - if assignment.has_assignment_submissions?
                      - if assignment.has_groups?
                        //Seriously, Fix Groups
                      - elsif assignment.has_teams?
                        - assignment.submission_for_team(@user.teams.first).tap do |submission|
                          - if submission
                            = link_to "See Submission ", assignment_assignment_submission_path(assignment, submission, :gradeable_id => @user.teams.first, :gradeable_type => "Team"), :class => 'btn-link'
                          - else
                            = link_to "Submit", new_assignment_assignment_submission_path(assignment, @assignment_submission, :submittable_id => @user.teams.first, :submittable_type => "Team"), :class => 'btn btn-mini btn-primary'
                      - elsif assignment.is_individual?
                        - assignment.submission_for_student(@user).tap do |submission|
                          - if submission
                            = link_to "See Submission ", assignment_assignment_submission_path(assignment, submission, :gradeable_id => @user, :gradeable_type => "User"), :class => 'btn-link'
                          - else
                            = link_to "Submit", new_assignment_assignment_submission_path(assignment, @assignment_submission, :submittable_id => @user, :submittable_type => "User"), :class => 'btn btn-mini btn-primary'

                      
                    // Individually graded assignments
                    - if assignment.is_individual?
                      - assignment.assignment_grades.where(:gradeable_id => @user).first.tap do |grade|
                        
                        - if assignment.self_gradeable? && assignment.open?
                          = link_to "#{assignment.student_logged_button_text}", self_log_assignment_grades_path(assignment, :gradeable_id => @user, :gradeable_type => "User"), :class => "btn btn-primary btn-mini"
                          
                        - if grade
                          - if current_user.is_staff?
                            %span.editLink= link_to "Edit Grade", edit_assignment_grade_path("assignment_id" => assignment.id, :id => grade, :gradeable_id => @user, :gradeable_type => "User"), :class => 'btn btn-primary btn-mini'
                          - if assignment.release_necessary? && grade.is_released? 
                            = "You earned #{ grade.score } out of #{grade.point_total} points"
                          - elsif assignment.release_necessary?
                            = "#{grade.point_total} points possible"
                          - else
                            = "You earned #{ grade.score} out of #{grade.point_total} points"
                        - else 
                          - if current_user.is_staff? 
                            %span.editLink= link_to "Grade", new_assignment_grade_path("assignment_id" => assignment.id, :gradeable_id => @user, :gradeable_type => "User"), :class => 'btn btn-link btn-mini'
                          = assignment.point_total
  
                    - elsif assignment.has_teams?
                      - if assignment.self_gradeable? && assignment.open?
                        = link_to "#{assignment.student_logged_button_text}", self_log_assignment_grades_path(assignment, :gradeable_id => @user.teams.first, :gradeable_type => "Team"), :class => "btn btn-primary btn-mini"
                      - assignment.assignment_grades.where(:gradeable_id => @user.teams.first).first.tap do |grade|
                        - if grade
                          - if current_user.is_staff?
                            %span.editLink= link_to "Edit Grade", edit_assignment_grade_path("assignment_id" => assignment.id, :id => grade, :gradeable_id => @user.teams.first, :gradeable_type => "Team"), :class => 'btn btn-primary btn-mini'
                          - if assignment.release_necessary? && grade.is_released? 
                            = "Your team earned #{ grade.score} out of #{grade.point_total} points"
                          - elsif assignment.release_necessary?
                            = "#{grade.point_total } points possible"
                          - else
                            = "Your team earned #{ grade.score } out of #{grade.point_total} points"
                        - else
                          - if current_user.is_staff? 
                            %span.editLink= link_to "Grade", new_assignment_grade_path("assignment_id" => assignment.id, :gradeable_id => @user.teams.first, :gradeable_type => "Team"), :class => 'btn btn-link btn-mini'
                          = assignment.point_total

                    - elsif assignment.has_groups?
                      = "#{assignment.point_total} possible points"
                            
      - if current_course.valuable_badges?
        %div.badges
          %button.btn.btn-inverse(data-target="#badges" data-toggle="collapse") Badges
          %span
            %span.badge.badge-warning= "#{@user.earned_badges_value(current_course)} points"

/[if IE]
  %a{ :href => 'https://www.google.com/intl/en/chrome/browser/' }
    %h1 We highly recommend you install Chrome to use GradeCraft                 

- if current_user.is_staff?
  %div.span12
    = link_to "See All #{current_course.user_ref}s", students_users_path, :class => "btn btn-primary"
    = link_to "Create a New #{current_course.user_ref}", new_user_path, :class => "btn btn-primary"