%div.btn-group.pull-right
  - if current_user.is_staff?
    - if current_course.has_badges? && current_course.course_badges? or current_course.has_badges? && current_course.multi_badges?
      = link_to "Award a Badge", new_user_earned_badge_path(@user), :class => "btn btn-mini btn-info"
    = link_to 'Predict Course Grade', predictor_users_path(:user_id => @user.id), :class => "btn btn-mini btn-info"
    - @user.team_leader.tap do |team_leader|
      - if team_leader.present?
        = link_to "Email #{current_course.section_leader_term} (#{team_leader.first_name})", "mailto:#{team_leader.email}", :class => "btn btn-mini btn-info"

%div#userID{ :'data-user-id' => @user.id }
%div#userPointValues
  - if current_user.is_student?
    = "Your current score is "
  - elsif current_user.is_staff?
    = "Current Score: "
  %span#userScoreNum #{number_with_delimiter(@user.earned_grades(current_course), :delimiter => ',') if @user.respond_to?(:earned_grades)}
- if current_course.graph_display?
  %div#userBarInProgressSim
  %div#userBarTotalSim
- else
  %a{:href => "#", :id => "totalScoreToggle", :class => "dashboard-toggle"}
    //Show me my score out of total course points
    %div#userBarInProgress{:class => "dashboard-toggle"}
  %a{:href => "#", :id => "soFarScoreToggle", :class => "dashboard-toggle"}
    //Show me my score out of available points so far
    %div#userBarTotal{:class => "dashboard-toggle"}

%div#Grades
  - @assignments.group_by(&:assignment_type).each do |assignment_type, assignments|
    %div.assignmentType.well.darkwell
      %button.btn.btn-primary{"data-target" => "#assignment_type-#{assignment_type.id}", "data-toggle" => "collapse"} #{assignment_type.try(:name) } 
      
      
      %span.badge.badge-warning.pull-right
        = number_with_delimiter(assignment_type.score_for_student(@user)) 
        = "/"
        = " #{number_with_delimiter(assignment_type.point_total_for_student(@user))} possible points"
      - if assignment_type.present_weight_for_student(@user)
        %span.badge.badge-important
          = "#{@user.weights_for_assignment_type_id(assignment_type).value} #{current_course.multiplier_term} "
          - if (assignment_type.student_choice? && assignment_type.multiplier_open?) || (assignment_type.student_choice? && current_user.is_staff?)
            - assignment_type.weight_for_assignment_type(@user).tap do |weight|
              - if weight
                = link_to "(Change)", edit_user_user_assignment_type_weight_path(@user, weight, :assignment_type_id => assignment_type)
      - else
        - if (assignment_type.student_choice? && assignment_type.multiplier_open?) || (assignment_type.student_choice? && current_user.is_staff?)
          %span.badge.badge-important= link_to "Set #{current_course.multiplier_term}", new_user_user_assignment_type_weight_path(@user, :assignment_type_id => assignment_type)
      
      %div{:id => "assignment_type-#{assignment_type.id}", :class => "collapse"}
        %div.assignmentsGroup
          - assignments.each do |assignment|
            %div.assignment
              %span.assignmentTitle= assignment.try(:name)
              - if assignment.is_required?
                %span.assignmentRequired.label.label-important Required!
              - if assignment.future?
                %span.assignmentDate= "| Due: #{assignment.try(:due_date).strftime("%A, %B %d")}"
                %span.assignmentDesc= raw assignment.description
              %div.grade
                - if assignment.has_assignment_submissions?
                  - if assignment.has_groups?
                    - if @user.group_for_assignment(assignment)
                      - assignment.submission_for_group(@user.groups.first).tap do |submission|
                        - if submission && @user.groups.first.grade_for_assignment(assignment)
                          = link_to "See Submission", assignment_assignment_submission_path(assignment, submission, :grade_id => @user.groups.first.grade_for_assignment(assignment).id, :gradeable_id => @user.groups.first, :gradeable_type => "Group"), :class => 'btn btn-mini btn-info'
                          = submission.created_date
                        - elsif submission
                          = link_to "See Submission", assignment_assignment_submission_path(assignment, submission, :gradeable_id => @user.groups.first, :gradeable_type => "Group"), :class => 'btn btn-mini btn-info'
                        - else
                          = link_to "Submit", new_assignment_assignment_submission_path(assignment, @assignment_submission, :submittable_id => @user.groups.first, :submittable_type => "Group"), :class => 'btn btn-mini btn-primary'
                  - elsif assignment.has_teams?
                    - assignment.submission_for_team(@user.teams.first).tap do |submission|
                      - if submission && @user.teams.first.grade_for_assignment(assignment)
                        = link_to "See Submission ", assignment_assignment_submission_path(assignment, submission, :grade_id => @user.teams.first.grade_for_assignment(assignment).id, :gradeable_id => @user.teams.first, :gradeable_type => "Team"), :class => 'btn btn-mini btn-info'
                      - elsif submission
                        = link_to "See Submission ", assignment_assignment_submission_path(assignment, submission, :gradeable_id => @user.teams.first, :gradeable_type => "Team"), :class => 'btn btn-mini btn-info'
                      - else
                        = link_to "Submit", new_assignment_assignment_submission_path(assignment, @assignment_submission, :submittable_id => @user.teams.first, :submittable_type => "Team"), :class => 'btn btn-mini btn-primary'
                  - elsif assignment.is_individual?
                    - assignment.submission_for_student(@user).tap do |submission|
                      - if submission && @user.grade_for_assignment(assignment)
                        = link_to "See Submission (#{submission.created_at})", assignment_assignment_submission_path(assignment, submission, :grade_id => @user.grade_for_assignment(assignment).id, :submittable_id => @user, :submittable_type => "User", :gradeable_id => @user, :gradeable_type => "User"), :class => 'btn btn-mini btn-info'
                      - elsif submission
                        = link_to "See Submission (#{submission.created_at})", assignment_assignment_submission_path(assignment, submission, :gradeable_id => @user, :gradeable_type => "User"), :class => 'btn btn-mini btn-info'
                      - else
                        = link_to "Submit", new_assignment_assignment_submission_path(assignment, @assignment_submission, :submittable_id => @user, :submittable_type => "User"), :class => 'btn btn-mini btn-primary'

                  
                // Individually graded assignments
                - if assignment.is_individual?
                  - assignment.assignment_grades.where(:gradeable_id => @user).first.tap do |grade|
                    - if grade
                      - if current_user.is_staff?
                        %span.editLink= link_to "Edit Grade", edit_assignment_grade_path("assignment_id" => assignment.id, :id => grade, :gradeable_id => @user, :gradeable_type => "User"), :class => 'btn btn-info btn-mini'
                      - if assignment.release_necessary? && grade.is_released? 
                        = "You earned #{ number_with_delimiter(grade.score(@user)) } out of #{number_with_delimiter(assignment.point_total_for_student(@user))} points"
                        %p= raw grade.feedback
                      - elsif assignment.release_necessary?
                        = "#{number_with_delimiter(assignment.point_total_for_student(@user))} points possible"
                        %p Test
                      - else
                        = "You earned #{number_with_delimiter(grade.score(@user))} out of #{number_with_delimiter(assignment.point_total_for_student(@user))} points"
                        %p= raw grade.feedback
                    - else 
                      - if assignment.self_gradeable? && assignment.open?
                        = button_to "#{assignment.student_logged_button_text}", self_log_assignment_grades_path(assignment, :gradeable_id => @user, :gradeable_type => "User"), :class => "btn btn-primary btn-mini"
                      - elsif current_user.is_staff? 
                        %span.editLink= link_to "Grade", new_assignment_grade_path("assignment_id" => assignment.id, :gradeable_id => @user, :gradeable_type => "User"), :class => 'btn btn-primary btn-mini'
                      = "#{assignment.point_total_for_student(@user)} possible points"
                      %p

                - elsif assignment.has_teams?
                  - if assignment.self_gradeable? && assignment.open?
                    = button_to "#{assignment.student_logged_button_text}", self_log_assignment_grades_path(assignment, :gradeable_id => @user.teams.first, :gradeable_type => "Team"), :class => "btn btn-primary btn-mini"
                  - assignment.assignment_grades.where(:gradeable_id => @user.teams.try(:first)).first.tap do |grade|
                    - if grade
                      - if current_user.is_staff?
                        %span.editLink= link_to "Edit Grade", edit_assignment_grade_path("assignment_id" => assignment.id, :id => grade, :gradeable_id => @user.teams.first, :gradeable_type => "Team"), :class => 'btn btn-info btn-mini'
                      - if assignment.release_necessary? && grade.is_released? 
                        = "Your team earned #{ grade.score(@user)} out of #{assignment.point_total_for_student(@user)} points"
                        %p= raw grade.feedback
                      - elsif assignment.release_necessary?
                        = "#{assignment.point_total_for_student(@user) } points possible"
                        %p
                      - else
                        = "Your team earned #{ grade.score(@user) } out of #{assignment.point_total_for_student(@user)} points"
                        %p= raw grade.feedback
                    - else
                      - if current_user.is_staff? 
                        %span.editLink= link_to "Grade", new_assignment_grade_path("assignment_id" => assignment.id, :gradeable_id => @user.teams.first, :gradeable_type => "Team"), :class => 'btn btn-primary btn-mini'
                      = "#{assignment.point_total_for_student(@user)} possible points"
                      %p

                - elsif assignment.has_groups?
                  - if @user.group_for_assignment(assignment)
                    - if assignment.self_gradeable? && assignment.open?
                      = button_to "#{assignment.student_logged_button_text}", self_log_assignment_grades_path(assignment, :gradeable_id => @user.groups.where(:assignment_id => assignment.id).first.id, :gradeable_type => "Group"), :class => "btn btn-primary btn-mini"
                    - assignment.assignment_grades.for_gradeable(@user.group_for_assignment(assignment)).first.tap do |grade|
                      - if grade
                        - if current_user.is_staff?
                          %span.editLink= link_to "Edit Grade", edit_assignment_grade_path(assignment, grade, :gradeable_id => @user.groups.where(:assignment_id => assignment.id).first.id, :gradeable_type => "Group"), :class => 'btn btn-info btn-mini'
                        - if assignment.release_necessary? && grade.is_released? 
                          = "Your group earned #{ grade.score(@user) } out of #{assignment.point_total_for_student(@user)} points"
                          %p= raw grade.feedback
                        - elsif assignment.release_necessary?
                          = "#{assignment.point_total_for_student(@user) } points possible"
                          %p
                        - else
                          = "Your group earned #{ grade.score(@user) } out of #{assignment.point_total_for_student(@user)} points"
                          %p= raw grade.feedback
                      - else
                        = "#{assignment.point_total_for_student(@user)} possible points"
                        %p
                        - if current_user.is_staff? 
                          %span.editLink= button_to "Grade", new_assignment_grade_path("assignment_id" => assignment.id, :gradeable_id => @user.groups.where(:assignment_id => assignment.id).first.id, :gradeable_type => "Group"), :class => 'btn btn-primary btn-mini'
                  - else
                    = button_to "Create a Group", new_assignment_group_path(assignment), :class => "btn btn-primary btn-mini"
                    
                    
  - if current_course.valuable_badges?
    %div.badges
      %button.btn.btn-inverse(data-target="#badges" data-toggle="collapse") Badges
      %span
        %span.badge.badge-warning= "#{@user.earned_badges_value(current_course)} points"

