%div#predictorWrapper
  %div#userID{ :'data-user-id' => @user.id }
    %div#predictionWrapper
      %div#projectedPoints
        %h3
          - if current_user.is_student?
            = "Your projected points:"
          - elsif current_user.is_staff?
            = "#{@user.name}'s projected points:"
          %span#predictor-score-display= number_with_delimiter(@user.earned_grades(current_course), :delimiter => ',') if @user.respond_to?(:earned_grades)
          = "/" 
          %span#predictor-course-total-display= current_course.total_points 
        %span#expectedPointsValue
        %div#prediction

%div#predictorPage{ 'data-student-name' => @user.name, 'data-course-total' => current_course.total_points }
  %div.flexslider
    %ul.slides
      - @assignments.group_by(&:assignment_type).each do |assignment_type, assignments|
        %li{:id => "slide-#{assignment_type.id}", :data => { :'assignment-type-id' => assignment_type.id, :'assignment-type-name' => assignment_type.name } }
          %div.slide-panel.span12
            %div.assignmentType
              %span.assignmentTypeTitle= assignment_type.name
              %div.pull-right
                - if assignment_type.student_choice? && assignment_type.multiplier_open?
                  - assignment_type.weights_for_student(@user).tap do |weight|
                    - if weight
                      %span.badge.badge-warning= "#{@user.assignment_type_multiplied_score(assignment_type)} / #{@user.assignment_type_multiplied_value(assignment_type)} possible points "
                      %span.badge.badge-important= "#{weight.value} #{current_course.multiplier_term}"
                      %span.badge.badge-important= link_to "Edit", edit_user_user_assignment_type_weight_path(@user, weight)
                    - else
                      %span.badge.badge-warning= "#{@user.assignment_type_score(assignment_type)} / #{assignment_type.assignment_value_sum} possible points"
                      %span.badge.badge-important= link_to "Set #{current_course.multiplier_term}", new_user_user_assignment_type_weight_path(@user, :assignment_type_id => assignment_type.id)
                - elsif assignment_type.student_choice?
                  - assignment_type.weights_for_student(@user).tap do |weight|
                    - if weight
                      %span.badge.badge-warning= "#{@user.assignment_type_multiplied_score(assignment_type)} / #{@user.assignment_type_multiplied_value(assignment_type)} possible points "
                      %span.badge.badge-important= "#{weight.value} #{current_course.multiplier_term}"
                - else
                  %span.badge.badge-warning= "#{@user.assignment_type_score(assignment_type)} / #{assignment_type.assignment_value_sum} possible points"
            %p.lead= raw assignment_type.predictor_description
            %div#pastAssignments
            - assignments.each do |assignment|
              - if assignment.past?
                %div.assignment
                  %span.assignmentTitle= assignment.try(:name)
                  - if assignment.is_required?
                    %span.assignmentRequired.label.label-important Required!
                  - if assignment.is_individual?
                    - assignment.assignment_grades.where(:gradeable_id => @user).each do |grade|
                      - if grade
                        - if assignment_type.student_choice? 
                          - assignment_type.weights_for_student(@user).tap do |weight|
                            - if @user.multipliers_assigned?
                              - if weight 
                                - if assignment.release_necessary? && grade.is_released? 
                                  = "You earned #{ grade.score * weight.value} out of #{grade.point_total * weight.value} points"
                                - elsif assignment.release_necessary?
                                  = "#{assignment.total_points * weight.value} points possible"
                                - else
                                  = "You earned #{ grade.score * weight.value} out of #{grade.point_total * weight.value} points"
                              - else
                                - if assignment.release_necessary? && grade.is_released? 
                                  = "You earned #{ grade.score * 0.5} out of #{grade.point_total * 0.5} points"
                                - elsif assignment.release_necessary?
                                  = "#{assignment.total_points * 0.5} points possible"
                                - else
                                  = "You earned #{ grade.score * 0.5} out of #{grade.point_total * 0.5} points"
                            - else
                              - if weight
                                - if assignment.release_necessary? && grade.is_released? 
                                  = "You earned #{ grade.score * weight.value} out of #{grade.point_total * weight.value} points"
                                - elsif assignment.release_necessary?
                                  = "#{assignment.total_points * weight.value} points possible"
                                - else
                                  = "You earned #{ grade.score * weight.value} out of #{grade.point_total * weight.value} points"
                              - else
                                - if assignment.release_necessary? && grade.is_released? 
                                  = "You earned #{ grade.score } out of #{grade.point_total} points"
                                - elsif assignment.release_necessary?
                                  = "#{assignment.total_points} points possible"
                                - else
                                  = "You earned #{ grade.score} out of #{grade.point_total} points"
                        - else
                          - if assignment.release_necessary? && grade.is_released? 
                            = "You earned #{ grade.try(:score)} / #{grade.try(:point_total)} points"
                          - elsif assignment.release_necessary?
                            = "#{grade.try(:point_total)} possible points"
                          - else
                            = "You earned #{ grade.score } / #{grade.point_total } points"
                  - elsif assignment.has_teams?
                    - assignment.assignment_grades.where(:gradeable_id => @user.teams.first).each do |grade|
                      - if grade
                        - if assignment_type.student_choice?
                          - assignment_type.weights_for_student(@user).tap do |weight|
                            - if @user.multipliers_assigned?
                              - if weight 
                                - if assignment.release_necessary? && grade.is_released? 
                                  = "Your team earned #{ grade.try(:score) * weight.value} out of #{grade.try(:point_total) * weight.value} points"
                                - elsif assignment.release_necessary?
                                  = "#{grade.try(:point_total) * weight.value} points possible"
                                - else
                                  = "Your team earned #{ grade.score * weight.value} out of #{grade.point_total * weight.value} points"
                              - else
                                - if assignment.release_necessary? && grade.is_released? 
                                  = "Your team earned #{ grade.try(:score) * 0.5} out of #{grade.try(:point_total) * 0.5} points"
                                - elsif assignment.release_necessary?
                                  = "#{grade.try(:point_total) * 0.5} points possible"
                                - else
                                  = "Your team earned #{ grade.score * 0.5} out of #{grade.point_total * 0.5} points"
                        - else
                          - if weight 
                            - if assignment.release_necessary? && grade.is_released? 
                              = "Your team earned #{ grade.try(:score) * weight.value} out of #{grade.point_total * weight.value} points"
                            - elsif assignment.release_necessary?
                              = "#{assignment.total_points * weight.value} points possible"
                            - else
                              = "Your team earned #{ grade.try(:score) * weight.value} out of #{grade.try(:point_total) * weight.value} points"
                          - else
                            - if assignment.release_necessary? && grade.is_released? 
                              = "Your team earned #{ grade.score } out of #{grade.point_total} points"
                            - elsif assignment.release_necessary?
                              = "#{assignment.total_points} points possible"
                            - else
                              = "Your team earned #{ grade.try(:score)} out of #{grade.try(:point_total) } points"
                      - else
                        - if assignment.release_necessary? && grade.is_released? 
                          = "Your team earned #{ grade.score} / #{grade.point_total} points"
                        - elsif assignment.release_necessary?
                          = "#{assignment.point_total} possible points"
                        - else
                          = "Your team earned #{ grade.score} / #{grade.point_total} points"
              - if assignment.future?
                %div.assignment.future
                  %span.assignmentTitle= assignment.name
                  - if assignment_type.fixed?
                    - assignment_type.weights_for_student(@user).tap do |weight|
                      - if weight  
                        = "#{(assignment.point_total * @user.assignment_type_multiplier(assignment_type))} possible points"
                        %input{:type => "checkbox", :name => assignment.name, :value => (assignment.point_total * @user.assignment_type_multiplier(assignment_type)), :class => "class-checkbox", :'data-assignment-type-id' => assignment.assignment_type_id }
                      - else
                        = "#{assignment.point_total} possible points"
                        %input{:type => "checkbox", :name => assignment.name, :value => assignment.point_total, :class => "class-checkbox", :'data-assignment-type-id' => assignment.assignment_type_id }
                  - if assignment_type.slider?
                    - assignment_type.weights_for_student(@user).tap do |weight|
                      - if weight  
                        %span.pScore= "0 "
                        = "/ #{(assignment.point_total * @user.assignment_type_multiplier(assignment_type))} possible points"
                        %div.slider{:id => "slider-"+assignment.id.to_s(), :max => (assignment.point_total * @user.assignment_type_multiplier(assignment_type)) , :value => 0 }
                      - else
                        %span.pScore= "0 "
                        = "/ #{assignment.point_total} possible points"
                        %div.slider{:id => "slider-"+assignment.id.to_s(), :max => assignment.point_total, :value => 0 }
                    
                    
                        //- if assignment_type.has_levels?
                        //%select{:name => "#{assignment.name}", :id => "#{assignment.id}"}
                        //- assignment.score_levels.each do |sl|
                        //%option{:value => "sl.value"}= sl.name 
                        //- else 
                      - if assignment_type.select?
                        - assignment_type.weights_for_student(@user).tap do |weight|
                          - if weight  
                            = "#{(assignment.point_total * @user.assignment_type_multiplier(assignment_type))} possible points"
                            = select_tag assignment.name, options_from_collection_for_select(assignment_type.score_levels,'value','name'), :class => 'point-value', :id => "total-#{assignment.id}", :include_blank => true
                          - else
                            = "#{assignment.point_total} possible points"
                            = select_tag assignment.name, options_from_collection_for_select(assignment_type.score_levels,'value','name'), :class => 'point-value', :id => "total-#{assignment.id}", :include_blank => true
      - if current_course.valuable_badges?
        %li#slide-badges{ :data => { 'assignment-type-id' => 'badges', 'assignment-type-name' => 'Badges' } }
          %div.slide-panel.span12
            %div.assignmentType
              %span.assignmentTypeTitle Badges
              %span.badge.badge-warning.pull-right= "#{@user.earned_badges_value(current_course)} points"
            %p.lead 
            %div
              - current_course.badges.each do |badge|
                - badge.badges_earned.where(:earnable_id => @user.id).first.tap do |eb|
                  - if eb
                    %div.earnedBadgeField
                      %img{:src => badge.try(:icon), :alt => badge.try(:name), :width => "50"}
                      %div.clearfix= badge.name
                      %div.clearfix
                        %b= "#{badge.point_value} points"
                  - else
                    %div.badgeField
                      %img{:src => badge.try(:icon), :alt => badge.try(:name), :width => "50"}
                      %div.clearfix= badge.name
                      %div.clearfix
                        %b= "#{badge.point_value} points"
                      %div.clearfix= check_box_tag badge.name, badge.point_value, @user.badges.include?(badge), :class => 'class-checkbox', :'data-assignment-type-id' => 'grades'
  = link_to "Back to the Dashboard", user_path(@user), :class => 'btn btn-primary'