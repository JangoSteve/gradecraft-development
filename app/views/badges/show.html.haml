= content_nav_for @badge

%h3.pagetitle= @title

.button-bar.context_menu
  %ul.button-group
    %li
      %a.button{:href => new_badge_path }
        %i.fa.fa-plus
        New #{(term_for :badge).titleize}
    %li
      %a.button{:href => edit_badge_path(@badge) }
        %i.fa.fa-edit
        Edit
    %li
      %a.button{:href => new_badge_earned_badge_path(:badge_id => @badge) }
        %i.fa.fa-star
        Award
    %li
      %a.button{:href => mass_award_badge_path(@badge) }
        %i.fa.fa-check
        Quick Award

- if current_course.has_teams?
  .team-filter
    = form_tag badge_path(@badge), :name => "see_team", :onchange => ("javascript: document.see_team.submit();"), :method => :get do
      %label.sr-only{:for => "team_id"}
        Select #{term_for :team}
      = select_tag :team_id, options_for_select(@teams.map { |t| [t.name, t.id] }, @team.try(:id)), :prompt => "â€“ Select #{(term_for :team).titleize} â€“"

//badge icon, total awarded, and points
.panel.columns.text-center
  %img{:src => @badge.icon, :alt => @badge.name, :width => "100" }
  %hr
    .center
      %b Awarded:
      .label.radius.bold.large=@badge.awarded_count

      
  - if @badge.point_total?
    %hr
    .center
      %b Point Value:
      ="#{@badge.point_total}"

.small-12.large-8.columns
  - if @badge.is_unlockable?
    .panel
      %i.fa.fa-lock
      Unlock Requirements
      - @badge.unlock_conditions.each do |uc|
        = link_to uc.condition.name, uc.condition

  - if @badge.description?
    %p
      %b Description:
      = raw @badge.description

  - if @badge.badge_files.present?
    %p
      %b Attachments:
      %ul
        - @badge.badge_files.each do |bf|
          %li
            = link_to bf.filename, bf.url
            - if current_user_is_staff?
              = link_to "(Remove)", remove_uploads_path({ :model => "BadgeFile", :upload_id => bf.id } )
- if current_user_is_staff?
  %table.responsive.nofeatures_default_last_name_dynatable
    %thead
      %tr
        - if @badge.is_unlockable?
          %th
        %th First Name
        %th Last Name
        %th{ :width => 300} Feedback
        - if @badge.can_earn_multiple_times
          %th Count
        %th{"data-dynatable-sorts" => "dateStamp"} Date Awarded
        %th{:style => "display: none"} Date Stamp
    %tbody
      - @students.each do |student|
        %tr
          - if @badge.is_unlockable?
            %td
              - if @badge.is_unlocked_for_student?(student)
                %i.fa.fa-unlock
              - else
                %i.fa.fa-lock
          %td= link_to student.first_name, student_path(student)
          %td= link_to student.last_name, student_path(student)
          %td{ :width => 80}
            - @badge.earned_badges.where(:student_id => student.id).each do |badge|
              %div{ :width => 80}= raw badge.feedback
          - if @badge.can_earn_multiple_times
            %td= @badge.earned_badge_count_for_student(student)
          %td
            .button-bar
              - @badge.earned_badges.where(:student_id => student.id).each do |badge|
                %img{:src => @badge.icon, :alt => @badge.name, :width => "20" }
                = "#{badge.created_at.strftime("%b %d")}"
                %ul.button-group.radius
                  %li= link_to "Edit", edit_badge_earned_badge_path(@badge, badge.id), :class => "button"
                  - if @badge.is_unlockable? && ! @badge.is_unlocked_for_student?(student)
                    %li= link_to "Unlock", manually_unlock_unlock_state_path(:student_id => student.id, :badge_id => @badge.id), :method => :post, :class => "button"
                  %li
                    = link_to badge_earned_badge_path(@badge, badge), :class => "button", :method => :delete, :data => { confirm: "Are you sure you want to delete this award?" } do
                      %i.fa.fa-trash.fa-fw
                      Delete
          %td
            - @badge.earned_badges.where(:student_id => student.id).each do |badge|
              = badge.created_at