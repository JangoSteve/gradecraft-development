- if @badge.errors.any?
  .alert-box.alert.radius
    .italic= "#{pluralize(@badge.errors.count, "error")} prohibited this #{(term_for :badge).titleize} from being saved:"
    %ul
      - @badge.errors.full_messages.each do |msg|
        %li= msg

= simple_form_for @badge do |f|
  %section

    %h4 Basic Settings

    .form-item
      = f.label :name, "Name"
      = f.text_field :name

    .form-item
      = f.label :point_total
      = f.text_field :point_total, data: {autonumeric: true, "m-dec" => "0"}

    .form-item
      = f.label :file_field, "Icon"
      = f.file_field :icon
      %img{:src => @badge.icon, :width => 80 }

    .form-item
      = f.label :visible
      = f.check_box :visible
      .form_label Can #{term_for :students} see this #{term_for :badge}?
    
    .form-item
      = f.label :can_earn_multiple_times,"Multi-award"
      = f.check_box :can_earn_multiple_times
      .form_label Can this #{term_for :badge} be given to one #{term_for :student} multiple times through the semester?

  %section
    %h4 Description

    .textarea
      = f.text_area :description
      .form_label Describe what this #{term_for :badge} means, and how it can be earned. Note that if this #{term_for :badge} is marked as visible then this description will also be viewable in the list of #{term_for :badges}.

  %section
    %h4 Unlocks
    .form-item
      = f.input :visible_when_locked
    
      .unlock-conditions
        %p.hint Unlock description here
        %script(id="unlock-condition-template" type="text/x-template")
          %fieldset.unlock-condition
            = f.simple_fields_for :unlock_conditions, UnlockCondition.new, class: 'form-inline', child_index: 'child_index' do |ucf|
              = render 'unlock_condition_fields', f: ucf
        - @badge.unlock_conditions.each do |condition|
          %fieldset.unlock-condition
            = f.simple_fields_for :unlock_conditions, condition, class: 'form-inline' do |ucf|
              = render 'unlock_condition_fields', f: ucf
      = link_to 'Add a Condition', '#', class: 'add-unlock-condition button radius'

  %section
    %h4 Attachments
    .form-item
      = f.simple_fields_for :badge_files, @badge.badge_files.new do |bf|
        = bf.file_field :file, :multiple => true
      - if @badge.badge_files.exists?
        %h5.bold Uploaded files
        %ul.uploaded-files
          - @badge.badge_files.each do |bf|
            - next if bf.new_record?
            %li
              - if bf.file_processing
                = "#{bf.filename}"
                .icon
                  .icon-tooltip
                    Refresh page to confirm upload has completed
                  %i.fa.fa-spinner= "(upload in progress)"
              - else
                = link_to bf.filename, bf.url, :target => "_blank"
                = link_to "(Remove)", remove_uploads_path({ :model => "BadgeFile", :badge_id => @badge.id, :upload_id => bf.id } )

  .submit-buttons
    %ul
      %li= submit_tag "#{@badge.persisted? ? 'Update' : 'Create'} #{term_for :badge}", :class => 'button'
      %li= link_to 'Cancel', badges_path, :class => 'button'