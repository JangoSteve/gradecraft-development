- @ungraded_submissions.group_by(&:assignment).each do |assignment, submissions|
  %h5
    = assignment.name
    - if assignment.assignment_type.mass_grade?
      = link_to 'Quick Grade', mass_grade_assignment_path(assignment), :class => "btn btn-tiny btn-info"
  %table.table.simpleTable
    %thead
      %tr
        - if assignment.is_individual?
          %th.sortable{"data-sort" => "string"} Student
        - elsif assignment.has_groups?
          %th.sortable{"data-sort" => "string"} Group

        - if current_course.has_teams? && assignment.is_individual?
          %th
        %th
        %th
    %tbody
      - submissions.each do |ug|
        %tr
          - if ug.assignment.is_individual?
            %td= link_to ug.student.try(:name), student_path(ug.student)
            %td
              - if current_course.has_teams? && ug.student.present? && ug.student.team_for_course(current_course).present?
                = link_to ug.student.team_for_course(current_course).try(:name), ug.student.team_for_course(current_course)
            %td= link_to "See Submission", assignment_submission_path(ug.assignment, ug), :class => 'btn btn-xs btn-success'
            %td= link_to 'Grade', edit_assignment_grade_path("assignment_id"=>assignment.id, :student_id => ug.student.try(:id)), :class => 'btn btn-xs btn-success'
          - elsif ug.assignment.has_groups?
            %td= link_to ug.group.try(:name), group_path(ug.group)
            %td= link_to "See Submission", assignment_submission_path(ug.assignment, ug), :class => 'btn btn-xs btn-success'
            %td= link_to 'Grade', edit_assignment_grade_path("assignment_id"=>assignment.id, :group_id => ug.group.try(:id)), :class => 'btn btn-xs btn-success'