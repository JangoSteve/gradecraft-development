= content_nav_for @group, "Review Group"

%h3.pagetitle= @title

.context_menu
  %ul
    %li
      %a{:href => group_path(@group) }
        %i.fa.fa-eye
        See #{term_for :group}

.pageContent
  = render 'layouts/alerts'
  
  %h4 #{term_for :assignments}:
  %ul
    - @group.assignment_groups.each do |ag|
      %li= link_to ag.assignment.name, ag.assignment
  %h4
    Members:
  %ul
    - @group.group_memberships.each do |gm|
      - if current_user_is_staff?
        %li= link_to gm.student.name, student_path(gm.student)
      - else
        %li= gm.student.name

  - if @group.proposals.present?
    - @group.proposals.order_by_creation_date.each_with_index do |p, index|
      - if p.proposal.present?
        .panel.callout
          %h4.bold= "Proposal ##{index + 1}: #{p.title}"
          %h6= "Created: #{p.created_at}"
          %p= p.proposal


  = simple_form_for @group do |f|
    = f.label :approved, "Status"
    = f.select :approved, [["Pending"], ["Approved"], ["Rejected"]]
    .form_label If rejected, this #{term_for :group} will be unable to submit any further work for these assignments

    %br

    .textarea
      = f.text_area :text_feedback, :class => "froala"
      .form_label #{(term_for :group).capitalize} Feedback

    .submit-buttons
      %ul
        %li= submit_tag "#{@group.persisted? ? 'Update' : 'Create'} #{ term_for :group } ",  :class => 'button'
        %li= link_to raw("<i class='fa fa-times-circle fa-fw'></i> Cancel"), groups_path, :class => 'button'