- if @assignment.pass_fail?
  .italic= "#{term_for :pass}/#{term_for :fail} Assignment"
- else
  .italic= "#{points @assignment.point_total} points possible"

.italic= "Opens: #{@assignment.open_at}" if @assignment.open_at?
.italic= "Due: #{@assignment.due_at}" if @assignment.due_at?

- if @assignment.student_logged? && @assignment.open? && current_user_is_student?

  = simple_form_for current_student.grade_for_assignment(@assignment), :url => self_log_grades_assignment_path(@assignment), :method => :post do |f|
    - present = current_student.self_reported_done?(@assignment)
    = hidden_field_tag :present, !present
    - if ! current_student.self_reported_done?(@assignment)
      = f.submit (@assignment.student_logged_button_text), :class => "button #{present ? 'alert' : 'success'} tiny radius"

- if @assignment.assignment_files.present?
  %hr
  %h4.uppercase Downloads
  %ul
    - @assignment.assignment_files.each do |af|
      %li= link_to af.filename, af.url

- if @assignment.is_unlockable?
  %hr
  %i.fa.fa-lock
  Unlock Requirements
  - @assignment.unlock_conditions.each do |uc|
    = link_to uc.condition.name, uc.condition

- if @assignment.description.present?
  %hr
  %h4.uppercase Guidelines:
  %p= raw @assignment.description

- if @assignment.assignment_type.predictor_description.present?
  %hr
  %h4.uppercase #{ @assignment.assignment_type.name} Guidelines:

  %p= raw @assignment.assignment_type.predictor_description
