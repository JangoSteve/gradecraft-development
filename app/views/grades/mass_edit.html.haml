= content_nav_for @assignment, "Quick Grade"do
  %li= link_to "Back to #{@assignment.name}", assignment_path(@assignment), :class => "btn btn-tiny btn-info"

.col-lg-12
  %h3= @title
  - if current_course.has_teams?
    .filters
      = form_tag mass_grade_assignment_path, :method => :get do
        = hidden_field_tag :assignment_id, @assignment.id
        = select_tag :team_id, options_for_select(current_course.teams.alpha.map { |t| [t.name, t.id] }, @team.try(:id)), :prompt => "Select a #{current_course.team_term}", :class => "input-sm"
        = submit_tag 'Filter', :class => 'btn btn-primary'

  #massGrade
    = simple_form_for @assignment, method: :put, :html => {:class => 'form-horizontal' }, :url => mass_grade_assignment_path(@assignment) do |f|
      .col-lg-offset-3
        - if @assignment.grade_checkboxes?
          .btn-group
            %button.select-all.btn.btn-tiny.btn-success.btn-info= "Check All"
            %button.select-none.btn.btn-tiny.btn-success.btn-info= "Uncheck"

        %table
          - @grades.each_with_index do |grade, i|
            %tr
              %td= link_to grade.student.name, student_path(grade.student)
              %td
                = f.simple_fields_for :grades, grade do |gf|
                  = gf.hidden_field :graded_by_id
                  - if !grade.status
                    = gf.hidden_field :status, :value => "Graded"
                  = gf.hidden_field :student_id
                  = label_tag do
                    // Checking to see if the grade is actually graded before setting the default value to 0
                    - if @assignment.grade_select? && @assignment.assignment_type.has_levels? && grade.status.present?
                      = gf.select :raw_score, options_from_collection_for_select(@score_levels, :value, :name, grade.raw_score), include_blank: true
                    - elsif @assignment.grade_select? && @assignment.assignment_type.has_levels?
                      = gf.select :raw_score, options_from_collection_for_select(@score_levels, :value, :name), include_blank: true
                    - elsif @assignment.grade_select? && @assignment.has_levels? && grade.status.present?
                      = gf.select :raw_score, options_from_collection_for_select(@assignment_score_levels, :value, :name, grade.raw_score), include_blank: true
                    - elsif @assignment.grade_select? && @assignment.has_levels?
                      = gf.select :raw_score, options_from_collection_for_select(@assignment_score_levels, :value, :name), include_blank: true
                    - elsif @assignment.grade_radio? && @assignment.assignment_type.has_levels?
                      - @score_levels.each do |score_level|
                        = gf.label :raw_score, score_level.name, value: score_level.value
                        = gf.radio_button :raw_score, score_level.value, :class => "radio_inline"
                    - elsif @assignment.grade_radio? && @assignment.has_levels?
                      - @assignment_score_levels.each do |assignment_score_level|
                        = gf.label :raw_score, assignment_score_level.name, value: assignment_score_level.value
                        = gf.radio_button :raw_score, assignment_score_level.value, :class => "radio_inline"
                    - elsif @assignment.grade_checkboxes?
                      = gf.check_box :raw_score, {}, @assignment.point_total, nil
                    - else
                      - if grade.persisted? && (grade.status == "Graded" || grade.status == "Released")
                        = gf.text_field :raw_score
                      - else
                        = gf.text_field :raw_score, :value => nil
                        = "/ #{points @assignment.point_total}"

      .form-actions.col-lg-offset-3
        = f.button :submit, "Submit Grades", :class => "btn btn-primary"
        = link_to 'Cancel', assignments_path, :class => 'btn btn-info'
